{"ast":null,"code":"var _jsxFileName = \"/Users/dukoqize/Desktop/graduate/Web development/2-React/confusion/src/components/DishdetailComponent.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardBody, CardTitle, CardText, Breadcrumb, BreadcrumbItem, Modal, ModalBody, ModalHeader, Button, Row, Label, Col } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nfunction RenderDish({\n  dish\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardImg, {\n    top: true,\n    src: dish.image,\n    alt: dish.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }, dish.name), /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  }, dish.description))));\n}\n\nfunction RenderComments({\n  comments,\n  addComment,\n  dishId\n}) {\n  const commentList = comments.map(cmt => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: \"cmt.id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }, cmt.comment, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, \"-- \", cmt.author, \", \", new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: '2-digit'\n    }).format(new Date(Date.parse(cmt.date)))));\n  });\n  if (comments != null) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-5 m-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, commentList), /*#__PURE__*/React.createElement(CommentForm, {\n    dishId: dishId,\n    addComment: addComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }));else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  });\n}\n\nconst maxLength = len => val => !val || val.length <= len;\n\nconst minLength = len => val => val && val.length >= len;\n\nclass CommentForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isModalOpen: false\n    };\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(values) {\n    this.toggleModal();\n    this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-pencil fa-lg fa-fw\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 64\n      }\n    }), \"Submit Comment\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.isModalOpen,\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      toggle: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, \"Submit Comment\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(LocalForm, {\n      onSubmit: values => this.handleSubmit(values),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    }, \"Rating\")), /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Control.select, {\n      model: \".rating\",\n      name: \"rating\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }, \"1\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 45\n      }\n    }, \"2\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 45\n      }\n    }, \"3\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 45\n      }\n    }, \"4\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 45\n      }\n    }, \"5\")))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"author\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    }, \"Your Name\")), /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Control.text, {\n      model: \".author\",\n      id: \"author\",\n      name: \"author\",\n      placeholder: \"Your Name\",\n      className: \"form-control\",\n      validators: {\n        minLength: minLength(3),\n        maxLength: maxLength(15)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Errors, {\n      className: \"text-danger\",\n      model: \".author\",\n      show: \"touched\",\n      messages: {\n        minLength: 'Must be greater than 2 characters',\n        maxLength: 'Must be 15 characters or less'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 41\n      }\n    }, \"Comment\")), /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Control.textarea, {\n      model: \".comment\",\n      id: \"comment\",\n      name: \"comment\",\n      rows: \"6\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 41\n      }\n    }, \"Submit\")))))));\n  }\n\n}\n\nconst DishDetail = props => {\n  if (props.dish != null) return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 45\n    }\n  }, \"Menu\")), /*#__PURE__*/React.createElement(BreadcrumbItem, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, props.dish.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, props.dish.name), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(RenderDish, {\n    dish: props.dish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(RenderComments, {\n    comments: props.comments,\n    addComment: props.addComment,\n    dishId: props.dish.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  })));else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  });\n};\n\nexport default DishDetail;","map":{"version":3,"sources":["/Users/dukoqize/Desktop/graduate/Web development/2-React/confusion/src/components/DishdetailComponent.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","CardText","Breadcrumb","BreadcrumbItem","Modal","ModalBody","ModalHeader","Button","Row","Label","Col","Link","Control","LocalForm","Errors","RenderDish","dish","image","name","description","RenderComments","comments","addComment","dishId","commentList","map","cmt","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","maxLength","len","val","length","minLength","CommentForm","constructor","props","state","isModalOpen","toggleModal","bind","handleSubmit","setState","values","rating","render","DishDetail","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Card, CardImg, CardBody, CardTitle, CardText, Breadcrumb, BreadcrumbItem,\n    Modal, ModalBody, ModalHeader, Button, Row, Label, Col} from 'reactstrap';\nimport {Link} from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\n    function RenderDish({dish}) {\n        return (\n            <div className='col-12 col-md-5 m-1'>\n                <Card>\n                    <CardImg top src={dish.image} alt={dish.name} />\n                    <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    }\n\n    function RenderComments({comments, addComment, dishId}) {\n        const commentList = comments.map((cmt) => {\n            return (\n                <li key=\"cmt.id\">\n                    <p>{cmt.comment} </p>\n                    <p>-- {cmt.author}, {new Intl.DateTimeFormat(\n                        'en-US', {year: 'numeric', month: 'short', day: '2-digit'}).format(\n                            new Date(Date.parse(cmt.date)))}</p>\n                </li>\n            );\n        });\n\n        if (comments != null)\n            return (\n                <div className='col-12 col-md-5 m-1'>\n                    <h4>Comments</h4>\n                    <ul className=\"list-unstyled\">\n                        {commentList}\n                    </ul>\n                    <CommentForm dishId={dishId} addComment={addComment}/>\n                </div>\n            );\n        else\n            return (\n                <div>\n                </div>\n            );\n    }\n\n\n    const maxLength = (len) => (val) => !(val) || (val.length <= len);\n    const minLength = (len) => (val) => val && (val.length >= len);\n\n    class CommentForm extends Component {\n        \n        constructor(props) {\n            super(props);\n            this.state = {\n                isModalOpen: false\n            };\n            this.toggleModal = this.toggleModal.bind(this);\n            this.handleSubmit = this.handleSubmit.bind(this);\n        }\n\n        toggleModal() {\n            this.setState({\n                isModalOpen: !this.state.isModalOpen\n            });\n        }\n\n        handleSubmit(values) {\n            this.toggleModal();\n            this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\n        }\n\n        render() {\n            return (\n                <React.Fragment>\n                    <Button outline onClick={this.toggleModal}><i class=\"fa fa-pencil fa-lg fa-fw\"></i>Submit Comment</Button>\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                        <ModalBody>\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                                <Row className=\"form-group\">\n                                    <Col xs=\"12\">\n                                        <Label htmlFor=\"rating\">Rating</Label>\n                                    </Col>\n                                    <Col xs=\"12\">\n                                        <Control.select model=\".rating\" name=\"rating\"\n                                            className=\"form-control\">\n                                            <option>1</option>\n                                            <option>2</option>\n                                            <option>3</option>\n                                            <option>4</option>\n                                            <option>5</option>\n                                        </Control.select>\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col xs=\"12\">\n                                        <Label htmlFor=\"author\">Your Name</Label>\n                                    </Col>\n                                    <Col xs=\"12\">\n                                        <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                            placeholder=\"Your Name\"\n                                            className=\"form-control\"\n                                            validators={{\n                                                minLength: minLength(3), maxLength: maxLength(15)\n                                            }} />\n                                        <Errors\n                                            className=\"text-danger\"\n                                            model=\".author\"\n                                            show=\"touched\"\n                                            messages={{\n                                                minLength: 'Must be greater than 2 characters',\n                                                maxLength: 'Must be 15 characters or less'\n                                            }}\n                                        />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col xs=\"12\">\n                                        <Label htmlFor=\"comment\">Comment</Label>\n                                    </Col>\n                                    <Col xs=\"12\">\n                                        <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                            rows=\"6\"\n                                            className=\"form-control\" />\n                                    </Col>\n                                </Row>\n                                <Row className=\"form-group\">\n                                    <Col xs=\"12\">\n                                        <Button type=\"submit\" color=\"primary\">\n                                        Submit\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </LocalForm>\n                        </ModalBody>\n                    </Modal>\n                </React.Fragment>\n            );\n        }\n    }\n\n    const DishDetail = (props) => {\n        if (props.dish != null)\n            return (\n                <div className = 'container'>\n                    <div className=\"row\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{props.dish.name}</h3>\n                            <hr />\n                        </div>                \n                    </div>\n                    <div className='row'>\n                        <RenderDish dish={props.dish} />\n                        <RenderComments comments={props.comments}\n                            addComment={props.addComment}\n                            dishId={props.dish.id} />\n                    </div>\n                </div>\n            );\n        else\n            return(\n                <div></div>\n            );\n    }\n\nexport default DishDetail;"]},"metadata":{},"sourceType":"module"}